#!/usr/bin/env ansible-playbook
---
- name: Deploy and prepare instances in OpenStack
  hosts: localhost
  vars:
    reource_prefix: "lingxiank8s"
    worker_node_number: 2
    boot_from_vol: false
    image: 6f526ede-0b07-4e7f-be83-84f474ebcd2e
    key_name: "lingxian_key"
    private_key_file: "/home/lingxiankong/.ssh/id_rsa"
    flavor: UKF2-std-2x2
    external_network_name: "vlan2803"
    subnet_cidr: "10.1.0.0/26"
    pod_ip_range: 192.168.0.0/16
  roles:
    - k8s_openstack_resource

- name: Prepare k8s hosts
  hosts: k8s_hosts
  become: true
  become_method: sudo
  gather_facts: false
  pre_tasks:
    - name: Wait for cloud init to finish
      raw: cloud-init status --wait

    - name: Install python 3
      raw: test -e /usr/bin/python || (apt -y update && apt install -y python3-minimal)

    - name: Install packages
      apt:
        name: "{{ packages }}"
        state: present
        update_cache: yes
      vars:
        packages:
          - python3-pip
          - ansible
          - unzip
          - build-essential
          - python3-dev
          - python3-setuptools
          - libffi-dev
          - libxslt1-dev
          - libxml2-dev
          - libyaml-dev
          - libssl-dev
          - zlib1g-dev
          - jq
          - net-tools

    - name: Pin pip to 9.0.3
      shell: pip3 install pip==9.0.3

    - name: Install pypi libraries
      pip:
        name: "{{ libraries }}"
      ignore_errors: True
      vars:
        libraries:
          - python-openstackclient
          - httpie

    - name: Gather facts after python installation
      setup: filter=ansible_*

    - name: Build hosts file
      lineinfile: dest=/etc/hosts line="{{ ansible_local_ip }} {{ ansible_hostname }}" state=present

    - name: Disable swap memory
      shell: swapoff -a
  roles:
    - docker
    - k8s_cli

- import_playbook: reset_k8s.yaml

- name: Set up k8s master
  hosts: k8s_master
  become: true
  become_method: sudo
  gather_facts: true
  roles:
    - kube_master

- name: Set up k8s nodes
  hosts: k8s_nodes
  become: true
  become_method: sudo
  gather_facts: true
  roles:
    - kube_node

- name: Set up cloud-controller-manager
  hosts: k8s_master
  become: true
  become_method: sudo
  gather_facts: true
  roles:
    - kube_cloud_controller_manager

- name: Clean up the installation
  hosts: localhost
  vars:
    remove_worker_floatingip: false
  tasks:
    - name: Remove worker node floating IP if needed
      os_floating_ip:
        state: absent
        purge: yes
        server: "{{ reource_prefix }}-worker-{{ item }}"
      loop: "{{ range(0, worker_node_number|int)|list }}"
      when: remove_worker_floatingip

- name: Install k8s addons
  hosts: k8s_master
  become: true
  become_method: sudo
  gather_facts: true
  vars:
    enable_addons: false
  roles:
    - role: addons/helm
      when: enable_addons|bool
    - role: addons/nginx-ingress-controller
      when: enable_addons|bool
    - role: addons/cert-manager
      when: enable_addons|bool
    - role: addons/dashboard
      when: enable_addons|bool